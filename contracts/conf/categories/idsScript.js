// THIS SHOULD ONLY BE RUN ONCE. IDs MUST BE PERSISTENT. IF NEW CATEGORIES ARE
// ADDED, THEY MUST BE ADDED TO THE END TO MAKE ALL CATEGORY IDS PERSISTENT

const fs = require('fs')
const HDWalletProvider = require('@truffle/hdwallet-provider')

const mnemonic = fs
    .readFileSync(__dirname + '/../../../../../private-keys/.categories-privkey.txt')
    .toString()
    .trim()
const provider = `https://infura.io/v3/${fs
    .readFileSync(__dirname + '/../../../../../private-keys/.infurakey.txt')
    .toString()
    .trim()}`
const categories = require('./raw-category-data/categories-empty.json')
const categoryCount = Object.keys(categories).length
// Create an HD wallet connected to infura with categories.length
const wallet = new HDWalletProvider(mnemonic, provider, 0, categoryCount)
// We use category ids as a set of addresses we will have access to in the future
const ids = wallet.addresses

// Next, let's seed categories.json with IDs for the 69 categories
let filledOutIds = {}

for (let i = 0; i < categoryCount; i++) {
    filledOutIds[Object.keys(categories)[i]] = ids[i]
}

console.log(`${categoryCount} ids (addresses) assigned to categories`)

const storeData = (data, path) => {
    try {
        fs.writeFileSync(path, JSON.stringify(data, null, 4))
    } catch (err) {
        console.error(err)
    }
}

// Store final categories json file. This autogenerated file is used for Everest
storeData(filledOutIds, __dirname + '/raw-category-data/ids.json')
